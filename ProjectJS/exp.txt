hello!
var firstBodyChild = document.body.children[0];
$( 'li', firstBodyChild );

null
firstBodyChild

----------------

var listItems = $( 'li' );
var rawListItem = listItems[0]; // или listItems.get( 0 )
var html = rawListItem.innerHTML; // - VM259:3 Uncaught TypeError: Cannot read property 'innerHTML' of undefined(…)

----------------

var listItems = $( 'li' );
var secondListItem = listItems.eq( 1 ); // VM262:2 Uncaught TypeError: listItems.eq is not a function(…)
secondListItem.remove();

-----------------

$( '<p>' ); // создание нового элемента <p> без содержимого
$( '<p>Привет!</p>' ); // создание нового элемента <p> с текстом
$( '<p class="greet">Привет!</p>' ); // создание нового элемента <p> с текстом и классом

-----------------

var listItems = $( 'li' );
var rawListItem = listItems[0]; // или listItems.get( 0 )
var html = rawListItem.innerHTML;

$( 'li' ).eq( 0 ).is( '.special' ); // false
$( 'li' ).eq( 1 ).is( '.special' ); // true

x
-----------------

$( 'li' ).html( 'Новый HTML' );

$( 'li' ).html(function( index, oldHtml ) {
  return oldHtml + '!!!'
});

-----------------

var listItems = $( 'li' );

// фильтровать выборку только для элементов с классом special
var special = listItems.filter( '.special' );

// фильтровать выборку только для элементов без класса special
var notSpecial = listItems.not( '.special' );

// фильтровать выборку только для элементов содержащих <span>
var hasSpans = listItems.has( 'span' );

----------------

var listItem = $( 'li' ).first(); // и .last()

----------------

// Получить родственные элементы этого пункта списка
var siblings = listItem.siblings();
  
// Получить следующего родственника этого пункта списка
var nextSibling = listItem.next(); // и .prev()
  
// Получить родителя этого пункта списка
var list = listItem.parent();

// Получить пункты списка являющихся непосредственными потомками list
var listItems = list.children();

// Получить ВСЕ пункты списка из list, включая вложенные
var allListItems = list.find( 'li' );

// Найти всех предков этого пункта списка с классом module
var modules = listItem.parents( '.module' );

// Найти ближайшего предка этого пункта списка с классом module
var module = listItem.closest( '.module' );

----------------

$( 'li' ).addClass( 'hidden' );
$( 'li' ).eq( 1 ).removeClass( 'hidden' );

$( 'li' ).eq( 1 ).toggleClass( 'hidden' );

----------------

$( 'li' ).eq( 1 ).css({
  'font-size': '20px',
  'padding-left': '20px'
});

----------------

$( 'li' ).click(function( event ) {
  console.log( 'clicked', $( this ).text() );
});

----------------

$( 'li' ).on( 'click', function( event ) {
  console.log( 'clicked', $( this ).text() );
});

----------------

$( 'li' ).on( 'click', function( event ) {
  console.log( 'clicked', $( this ).text() );
});

----------------

$( 'li' ).off( 'click' );

----------------

$( 'li' ).on( 'click.logging', function() {
  console.log( 'щёлкнули по элементу списка' );
});
  
$( 'li' ).on( 'click.analytics', function() {
  registerClick();
  doSomethingElse();
);

$( 'li' ).off( 'click.logging' ); - отключает конкретный обработчик событий

----------------

var handleClick = function() {
  console.log( 'на что-то щёлкнули' );
};
  
$( 'li' ).on( 'click', handleClick );
$( 'h1' ).on( 'click', handleClick );

----------------

$( document ).on( 'click', function( event ) {
  console.log( event.type );    // Тип события, к примеру click
  console.log( event.which );   // Нажатая кнопка или клавиша
  console.log( event.target );  // Источник события
  console.log( event.pageX );   // Координата мыши по оси X
  console.log( event.pageY );   // Координата мыши по оси Y
});

----------------

$( 'input' ).on( 'keydown', function( event ) {
  // this: Элемент, с которым связан обработчик событий
  // event: Объект события
  // Сменить цвет фона элемента <input> при нажатии на backspace 
  // на красный, в противном случае на зелёный
  $( this ).css( 'background', event.which === 8 ? 'red' : 'green' );
});

----------------

$( 'a' ).on( 'click', function( event ) {
  // Отменяем действие по умолчанию
  event.preventDefault();
  // Выводим
  console.log( 'По мне уже щёлкнули!' );
});

----------------

<a href="#foo"><span>Я ссылка!</span></a>
<a href="#bar"><b><i>И ты ссылка?</i></b></a>


$( 'a' ).on( 'click', function( event ) {
  event.preventDefault();
  console.log( $( this ).attr( 'href' ) );
});

----------------









